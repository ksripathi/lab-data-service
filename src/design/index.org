#+TITLE: Design of lab-data-service
#+AUTHOR: VLEAD
#+DATE: [2016-12-04 Sun]
#+SETUPFILE: ../org-templates/level-1.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil


* Introduction 
  The =design= of the =lab-data-service= is captured here.


* Application Programming Interface
  :PROPERTIES:
  :CUSTOM_ID: api
  :END: 

** Save exp spec data
  :PROPERTIES:
  :CUSTOM_ID: save_lab_specs
  :END:    
  - URL :: /save_exp_spec_data

  - Method :: POST

  - URL Params ::  None

  - Payload :: 
#+BEGIN_EXAMPLE

{"experiment": {"id": "e99847", 
                  "name": "Parallel and distributed processing", 
                  "overview": "This deals with eiciting how parallel and distributed processing is done", 
                  "sections" : [{"name": "Introduction"},
                                {"name": "Objective"},
                                {"name": "Tutorial"},
                                {"name": "Illustration"},
                                {"name": "Procedure"},
                                {"name": "Experiment"},        
                                {"name": "Observations"},
                                {"name": "Assignment"},  
                                {"name": "References"}]
                }
  }

#+END_EXAMPLE	       

  - Success Response
    + Status_Code: 200
    + Content: 
              {"status" : "successfully updated records"}

  - Error Response:
    + Contents :
                {"status" : "error"}
    
  - Example:
    [[http://localhost:5000/save_lab_spec_data][example url]]


** Save lab spec data
  :PROPERTIES:
  :CUSTOM_ID: save_lab_specs
  :END:    
  - URL :: /save_lab_spec_data

  - Method :: POST

  - URL Params ::  None

  - Payload :: 
#+BEGIN_EXAMPLE

{"lab": {"id": "cse02", 
                  "name": "Computer Programming",
                  "overview": "This lab deals with computer programming",
                  "sections" : [{"name": "Introduction"},
                                {"experiments": [e100, e200, ....]}]
                }
}

#+END_EXAMPLE	       

  - Success Response
    + Status_Code: 200
    + Content: 
              {"status" : "successfully updated records"}

  - Error Response:
    + Contents :
                {"status" : "error"}
    
  - Example:
    [[http://localhost:5000/save_lab_spec_data][example url]]


** Get all experiments
  :PROPERTIES:
  :CUSTOM_ID: save_lab_specs
  :END:    
  - URL :: /experiments

  - Method :: GET

  - URL Params ::  None

  - Payload :: 

  - Success Response
    + Status_Code: 200
      + Contents :

        #+BEGIN_EXAMPLE

[
  {
    "exp_name": "arrays",
    "overview": "this is about arrays exp",
    "id": 1,
    "exp_id": "cse02"
  },
  {
    "exp_name": "stack",
    "overview": "this is about stacks",
    "id": 2,
    "exp_id": "cse022"
  }
]

#+END_EXAMPLE	       

    
  - Error Response:
    + Contents :
                {"status" : "error"}
    
  - Example:
    [[http://localhost:5000/save_lab_spec_data][example url]]


** Get experiment by exp-id
  :PROPERTIES:
  :CUSTOM_ID: save_lab_specs
  :END:    
  - URL :: /experiments/<exp-id>

  - Method :: GET

  - URL Params ::  None

  - Payload :: 

  - Success Response
    + Status_Code: 200
      + Contents :
#+BEGIN_EXAMPLE
{
  "exp_id": "cse02", 
  "exp_name": "computers", 
  "id": 1, 
  "overview": "dfdsdfs"
}

#+END_EXAMPLE	       

    
  - Error Response:
    + Contents :
                {"status" : "error"}
    
  - Example:
    [[http://localhost:5000/save_lab_spec_data][example url]]


** Update experiment by exp-id
  :PROPERTIES:
  :CUSTOM_ID: save_lab_specs
  :END:    
  - URL :: /experiments/<exp-id>

  - Method :: PUT

  - URL Params ::  None

  - Payload :: 
#+BEGIN_EXAMPLE
  {
    "exp_name": "arrays",
    "overview": "this is about arrays exp",
    "exp_id": "cse02",
    "key" : "defaultkey"
  }

#+END_EXAMPLE	       

  - Success Response
    + Status_Code: 200
      + Contents :
                {"status" : "success"}
    
  - Error Response:
    + Contents :
                {"status" : "error"}
    
  - Example:
    [[http://localhost:5000/save_lab_spec_data][example url]]


** Get all labs
  :PROPERTIES:
  :CUSTOM_ID: save_lab_specs
  :END:    
  - URL :: /labs

  - Method :: GET

  - URL Params ::  None

  - Payload :: 

  - Success Response
    + Status_Code: 200
      + Contents :

        #+BEGIN_EXAMPLE

[
  {
    "exp_name": "arrays",
    "overview": "this is about arrays exp",
    "id": 1,
    "exp_id": "cse02"
  },
  {
    "exp_name": "stack",
    "overview": "this is about stacks",
    "id": 2,
    "exp_id": "cse022"
  }
]

#+END_EXAMPLE	       

    
  - Error Response:
    + Contents :
                {"status" : "error"}
    
  - Example:
    [[http://localhost:5000/save_lab_spec_data][example url]]


** Get lab by lb-id
  :PROPERTIES:
  :CUSTOM_ID: save_lab_specs
  :END:    
  - URL :: /labs/<lab-id>

  - Method :: GET

  - URL Params ::  None

  - Payload :: 

  - Success Response
    + Status_Code: 200
      + Contents :
#+BEGIN_EXAMPLE
{
  "exp_id": "cse02", 
  "exp_name": "computers", 
  "id": 1, 
  "overview": "dfdsdfs"
}

#+END_EXAMPLE	       

    
  - Error Response:
    + Contents :
                {"status" : "error"}
    
  - Example:
    [[http://localhost:5000/save_lab_spec_data][example url]]


** Update lab by lab-id
  :PROPERTIES:
  :CUSTOM_ID: save_lab_specs
  :END:    
  - URL :: /labs/<lab-id>

  - Method :: PUT

  - URL Params ::  None

  - Payload :: 
#+BEGIN_EXAMPLE
  {
    "exp_name": "arrays",
    "overview": "this is about arrays exp",
    "exp_id": "cse02",
    "key" : "defaultkey"
  }

#+END_EXAMPLE	       

  - Success Response
    + Status_Code: 200
      + Contents :
                {"status" : "success"}
    
  - Error Response:
    + Contents :
                {"status" : "error"}
    
  - Example:
    [[http://localhost:5000/save_lab_spec_data][example url]]



** Get lab resource map
  :PROPERTIES:
  :CUSTOM_ID: save_lab_specs
  :END:    
  - URL :: /lab-resource-maps/<lab-id>

  - Method :: GET

  - URL Params ::  None

  - Payload :: 

  - Success Response
    + Status_Code: 200
      + Contents :

        #+BEGIN_EXAMPLE


#+END_EXAMPLE	       

    
  - Error Response:
    + Contents :
                {"status" : "error"}
    
  - Example:
    [[http://localhost:5000/save_lab_spec_data][example url]]


** Get exp resource map
  :PROPERTIES:
  :CUSTOM_ID: save_lab_specs
  :END:    
  - URL :: /exp-resource-maps/<exp-id>

  - Method :: GET

  - URL Params ::  None

  - Payload :: 

  - Success Response
    + Status_Code: 200
      + Contents :

        #+BEGIN_EXAMPLE


#+END_EXAMPLE	       

    
  - Error Response:
    + Contents :
                {"status" : "error"}
    
  - Example:
    [[http://localhost:5000/save_lab_spec_data][example url]]


* Design diagram
  :PROPERTIES:
  :CUSTOM_ID: design_diagram
  :END:    

#+BEGIN_HTML
<img src="https://docs.google.com/drawings/d/e/2PACX-1vQ-WiohgmhaseluocCU0TBOoIUSWctv6raQ03gPO_-jhRkgtQbxH2DX0924ux3O7Hfz3zwKGJnt7r1Z/pub?w=960&h=720">
<p align="center"> lab data service design diagram </p>
#+END_HTML

  To edit the feedback relations image [[https://docs.google.com/drawings/d/1TAaHpf0UiCLvLRP_XfBBQki7pU624oWXRduxyz6e1NA/edit?ts=58415ec0][click here]]
** Process
*** Get the lab's meta data
   :PROPERTIES:
   :CUSTOM_ID: lab_meta_data
   :END: 

   - Get all the labs meta data which includes lab id, experiment id,
     institutes, disciplines and developers details.

*** Construct lab spec with lab's meta data in json format 
   :PROPERTIES:
   :CUSTOM_ID: construct_lab_spec
   :END: 
   
   - Lab spec should be filled up with consistant naming convention of
     lab id, experiment id, institutes, disciplines and developers
     details in =json= format

*** Version controll lab spec file 
   :PROPERTIES:
   :CUSTOM_ID: version_lab_specs
   :END: 
   
   - All the lab spec files has to be checked into the single git repository.

*** Parse lab spec files checked into git repo 
   :PROPERTIES:
   :CUSTOM_ID: parse_lab_specs
   :END: 

   - A =web-hook= from Github repository will invoke the
     =lab-data-service= when changes made to lab specs.
   - =lab-data-service= has to parse the lab spec files and stored the
     data into the database.
   
*** All lab spec files in git repo are read only  
   :PROPERTIES:
   :CUSTOM_ID: lab_spec_read_only
   :END: 

   - Only admin or group of authorized users of git repository has
     access to modify the lab spec files.

